# vi: set ft=php :
# <?php
snippet sf_configuration
use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

final class `!p snip.rv = os.path.splitext(os.path.basename(snip.fn))[0]` implements ConfigurationInterface
{
	/**
	 * @var string
	 */
	private $alias;

	/**
	 * Initialize a new instance of Configuration.
	 *
	 * @param string $alias
	 */
	public function __construct($alias)
	{
		$this->setAlias($alias);
	}

	# {{{ Setters

	/**
	 * Set the extension alias.
	 *
	 * @param string $alias
	 *
	 * @return void
	 */
	private function setAlias($alias)
	{
		$this->alias = $alias;
	}

	# }}}

	/**
	 * Generates the configuration tree builder.
	 *
	 * @return TreeBuilder
	 */
	public function getConfigTreeBuilder()
	{
		$treeBuilder = new TreeBuilder();
		$rootNode = $treeBuilder->root($this->alias);

		$rootNode
			->info('${1:`!p

snip.rv = os.path.basename(os.path.dirname(os.path.dirname(path)))[0:-6] + " Bundle"

`} Configuration')
			->append($this->add${2:My}ConfigurationSection());$0

		return $treeBuilder;
	}

	/**
	 * Add the '${3:`!p

snip.rv = t[2]
snip.rv = re.sub("(.)([A-Z][a-z]+)", r"\1_\2", snip.rv)
snip.rv = re.sub("([a-z0-9])([A-Z])", r"\1_\2", snip.rv).lower()

`}' configuration section.
	 *
	 * @return \Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition
	 */
	protected function add$2ConfigurationSection()
	{
		$treeBuilder = new TreeBuilder();

		$node = $treeBuilder->root('$3');

		return $node;
	}

	# {{{ Getters

	/**
	 * Get the extension alias.
	 *
	 * @return string
	 */
	public function getAlias()
	{
		return $this->alias;
	}

	# }}}
}
endsnippet
