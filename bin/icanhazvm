#!/usr/bin/env bash

set -euo pipefail

local_path="${HOME}/.icanhazvm"

vm_memory=1024
vm_box='ubuntu/trusty64'
vm_destroy=0

if ! which vagrant &>/dev/null; then
  echo "icanhazvm: cannot find 'vagrant'" 1>&2
  exit 2
fi

vagrant_bin="$( which vagrant )"

version() {
  echo 'icanhazvm 0.1.0'
}

usage() {
  echo 'Usage: icanhazvm [ stop | [-m MB] [-d] box ]'
}

help() {
  version
  usage
  echo
  echo "Arguments:"
  echo
  echo "    stop"
  echo "        Force shut down of a running VM (equivalent of pulling power)."
  echo "    box (default: ${vm_box})"
  echo "        The box name. See https://vagrantcloud.com/discover"
  echo
  echo "Options:"
  echo
  echo "    -m, --memory (default: ${vm_memory})"
  echo "        Specify the amount of memory, in MB, the VM will have access to."
  echo "    -d, --destroy"
  echo "        Destroy the previous VM, if such exists."
  echo
}

vgrnt() {
  local exit_code=0

  pushd "$local_path" 1>/dev/null
  VAGRANT_LOG=warn "$vagrant_bin" "$@" || exit_code=$?
  popd 1>/dev/null

  return $exit_code
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -v | --version ) version ; exit 0 ;;
    -h | --help ) help ; exit 0 ;;
    -m | --memory ) vm_memory="$2" ; shift 2 ;;
    -d | --destroy ) vm_destroy=1; shift 1 ;;
    -- ) shift ; break ;;
    -* )
      echo "icanhazvm: invalid option '${1}'" 1>&2
      usage 1>&2 ; exit 1 ;;
    * ) break ;;
  esac
done

if [[ $# -gt 0 ]]; then
  vm_box="$1"
  shift
fi

if [[ $# -ne 0 ]]; then
  echo 'icanhazvm: too many arguments' 1>&2
  usage 1>&2
  exit 1
fi

mkdir -p "$local_path"

if [[ "$vm_box" = 'stop' ]]; then
  vgrnt halt --force
  exit 0
fi

cat > "${local_path}/Vagrantfile" <<-EOD
Vagrant.configure('2') do |config|
  config.vm.box = '${vm_box}'
  config.vm.hostname = 'icanhazvm'

  config.vm.provider :virtualbox do |virtualbox|
    virtualbox.customize ['modifyvm', :id, '--memory', '${vm_memory}', '--natdnshostresolver1', 'on']
  end
end
EOD

if [[ "$vm_destroy" -gt 0 ]]; then
  vgrnt destroy --force
fi

vgrnt up
vgrnt ssh
