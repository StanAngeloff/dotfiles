[user]
	name = Stan Angeloff
	email = stanimir@psp-webtech.co.uk
	signingkey = stanimir@psp-webtech.co.uk

[company]
	name = PSP UK Group Ltd.
	email = hello@psp-group.co.uk

[github]
	user = StanAngeloff
	token = ${token}

[gui]
	fontui = -family \"IBM Plex Sans\" -size 14 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Berkeley Mono\" -size 14 -weight normal -slant roman -underline 0 -overstrike 0
	commitmsgwidth = 78
	encoding = utf-8
	diffcontext = 4
	historybrowser = gitk

[color]
	ui = auto
[color.diff-highlight]
	oldnormal = "1 0"
	oldhighlight = "210 52"
	newnormal = "2 0"
	newhighlight = "120 22"
[color.diff]
	oldMoved = "251 0"
	newMoved = "251 0"

[init]
	defaultBranch = master

[core]
	editor = nvim
	attributesFile = ~/.gitattributes

[pager]
	diff = diff-highlight | less -iRS
	show = diff-highlight | less -iRS

[diff]
	colorMoved = default
	compactionHeuristic = true
	indentHeuristic = true

[branch]
	autoSetupRebase = always

[alias]
	a  = add
	au = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	b  = branch
	br = branch -r
	c  = commit
	co = checkout
	df  = diff -U5 --minimal --histogram --indent-heuristic --ignore-space-change --ignore-blank-lines --no-ext-diff --color-moved=zebra --color-moved-ws=ignore-space-change
	dfa = diff -U5 --minimal --histogram --indent-heuristic --ignore-all-space    --ignore-blank-lines --no-ext-diff --color-moved=zebra --color-moved-ws=ignore-all-space
	eu = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim -p `f`"
	f  = fetch       --prune --verbose
	fa = fetch --all --prune --verbose
	ig = !git ls-files -v | grep "^[[:lower:]]"
	l  = log       --graph        --abbrev-commit --date=human --pretty=format:'%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)%cr (%cd) %C(blue)%an%C(reset)'
	la = log --all --graph --tags --abbrev-commit --date=human --pretty=format:'%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)%cr (%cd) %C(blue)%an%C(reset)'
	ro = !sh -c 'git rebase -i --autostash --autosquash origin/"$( git symbolic-ref --short HEAD )"'
	s  = status -sb
	su = submodule update --init --recursive

	try = !sh -c 'git clone --depth "${2-1}" --branch "${1-master}" --single-branch "$0"'

	freeze = !bash -c '. $HOME/bin/git-freeze.sh && git-freeze'
	thaw   = !bash -c '. $HOME/bin/git-freeze.sh && git-thaw'

[push]
	default = upstream
	recurseSubmodules = check
	gpgSign = if-asked

[gpg]
	program = gpg2

[commit]
	gpgsign = true

# See http://git-scm.com/blog/2010/03/08/rerere.html
[rerere]
	enabled = true

# See http://git-scm.com/docs/git-rebase#_configuration
[rebase]
	autoSquash = true
	autoStash = true

[stash]
	showPatch = true

[merge]
	#conflictstyle = diff3

# See https://groups.google.com/forum/m/#!msg/binary-transparency/f-BI4o8HZW0/MDmnWideAgAJ
[transfer]
	fsckObjects = true
[fetch]
	fsckObjects = true
[receive]
	fsckObjects = true

[credential]
	helper = cache --timeout=3600

[protocol]
	version = 2
